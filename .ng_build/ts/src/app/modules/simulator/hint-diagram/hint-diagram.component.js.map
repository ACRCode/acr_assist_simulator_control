{"version":3,"sources":["hint-diagram.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAmB,KAAA,EAAM,MAAA,eAAA,CAAA;AAElC,MAEC;;AAEM,+BAAA,GAAoC;IAD3C,EAEE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBADvB,QAAQ,EAEE,kBAAA;gBADV,QAAQ,EAEE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiET;gBACD,MAAM,EAEE,CAAA;;GAAP,CAEC;aADH,EAEC,EAAG;CADJ,CAEC;AADF;;GAEG;AACF,mCAAA,GAAA,MAAA,EACA,CAAC;AACK,mCAAA,GAAyD;IAChE,aAAa,EAAE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAC/B,CAAC;AAGF;IACA,gBAAgB;IAChB,oBAAoB,CAAC,UAAU,CAAC;IAChC;;;OAGG;IACH,oBAAoB,CAAC,cAAc,CAAC;IACpC,gBAAgB;IAChB,oBAAoB,CAAC,cAAc,CAAC;IACpC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,WAAW,CAAC;AAC3C,CAAC","file":"hint-diagram.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { DataElement } from '../shared/models/data-element.model';\nexport class HintDiagramComponent {\n   DataElement: DataElement;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'acr-hint-diagram',\n  template: `\n    <button type=\"button\" class=\"btn btn-default btn-xs\" data-toggle=\"modal\" attr.data-target=\"#{{'diag_'+DataElement.ID}}\">\n      <span class=\" glyphicon glyphicon-cd\" aria-hidden=\"true\" data-toggle=\"tooltip\"  data-placement=\"right\" title=\"Hint Diagrams\"></span>\n\n    </button>\n    <div class=\"modal fade adjust-diagram \" tabindex=\"-1\" role=\"dialog\" attr.id=\"{{'diag_'+DataElement.ID}}\" aria-labelledby=\"mySmallModalLabel\">\n    <div class=\"modal-dialog modal-lg adjust-diagram-image \" role=\"document\">\n    <div class=\"modal-content\">\n    <div class=\"modal-header\">\n    <h4 class=\"modal-title\">\n    {{DataElement.Label}}\n    </h4>\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">Ã—</span></button>\n    </div>\n\n\n\n    <div class=\"carousel slide\" data-ride=\"carousel\" data-interval=\"false\">\n\n\n    <!-- Wrapper for slides -->\n\n    <div class=\"carousel-inner\" role=\"listbox\">\n    <ng-container *ngFor=\"let diag of DataElement.Diagrams \">\n    <ng-container *ngIf=\"DataElement.Diagrams.indexOf(diag) == 0\">\n    <div class=\"item active\">\n    <img src=\"{{diag.Location}}\">\n    <!--<div class=\"carousel-caption\">\n\n    </div>-->\n    </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"DataElement.Diagrams.indexOf(diag) > 0\">\n    <div class=\"item\">\n    <img src=\"{{diag.Location}}\">\n    <!--<div class=\"carousel-caption\">\n\n    </div>-->\n    </div>\n    </ng-container>\n\n    </ng-container>\n\n\n\n\n    </div>\n    <ng-container *ngIf=\"DataElement.Diagrams.length > 1\">\n    <!-- Controls -->\n    <a class=\"left carousel-control\" onclick=\"return false;\" href=\"#carousel-example-generic\" role=\"button\" data-slide=\"prev\">\n    <span class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Previous</span>\n    </a>\n    <a class=\"right carousel-control\" onclick=\"return false;\" href=\"#carousel-example-generic\" role=\"button\" data-slide=\"next\">\n    <span class=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Next</span>\n    </a>\n    </ng-container>\n    </div>\n\n\n\n\n    </div>\n    </div>\n    </div>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'DataElement': [{ type: Input },],\n};\n}\n\nfunction HintDiagramComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHintDiagramComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHintDiagramComponent.ctorParameters;\n/** @type {?} */\nHintDiagramComponent.propDecorators;\n/** @type {?} */\nHintDiagramComponent.prototype.DataElement;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}